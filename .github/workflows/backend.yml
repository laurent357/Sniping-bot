name: Backend CI

on:
  push:
    branches: [ master, develop ]
    paths:
      - 'backend/**'
  pull_request:
    branches: [ master, develop ]
    paths:
      - 'backend/**'

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: trading_bot_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Enable memory overcommit
      run: |
        sudo sysctl vm.overcommit_memory=1

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/python/requirements.txt
        pip install -r backend/python/requirements-dev.txt

    - name: Run linting
      run: |
        flake8 .
        black . --check
        isort . --check-only

    - name: Run type checking
      run: mypy .

    - name: Run tests with pytest
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/trading_bot_test
        REDIS_URL: redis://localhost:6379/0
      run: |
        pytest --cov=. --cov-report=xml

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        directory: backend/
        flags: backend
        name: backend-coverage

  docker:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'

    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: backend
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/trading-bot-backend:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/trading-bot-backend:${{ github.sha }}
        cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/trading-bot-backend:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/trading-bot-backend:buildcache,mode=max 