name: Deploy

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')

    steps:
    - uses: actions/checkout@v3

    - name: Set environment variables
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          echo "DEPLOY_ENV=production" >> $GITHUB_ENV
          echo "DEPLOY_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
        else
          echo "DEPLOY_ENV=staging" >> $GITHUB_ENV
          echo "DEPLOY_TAG=latest" >> $GITHUB_ENV
        fi

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Add known hosts
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

    - name: Copy docker-compose files
      run: |
        scp docker-compose.yml ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }}:~/trading-bot/
        scp docker-compose.${{ env.DEPLOY_ENV }}.yml ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }}:~/trading-bot/

    - name: Deploy
      env:
        DOCKER_HOST: ssh://${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }}
      run: |
        # Création du fichier .env
        echo "POSTGRES_PASSWORD=${{ secrets.DB_PASSWORD }}" > .env
        echo "REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}" >> .env
        echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
        echo "SOLANA_RPC_URL=${{ secrets.SOLANA_RPC_URL }}" >> .env
        
        # Copie du fichier .env
        scp .env ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }}:~/trading-bot/

        # Déploiement avec docker-compose
        docker-compose -f docker-compose.yml -f docker-compose.${{ env.DEPLOY_ENV }}.yml pull
        docker-compose -f docker-compose.yml -f docker-compose.${{ env.DEPLOY_ENV }}.yml up -d

    - name: Verify deployment
      env:
        DOCKER_HOST: ssh://${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }}
      run: |
        docker-compose ps
        sleep 30  # Attendre que les services démarrent
        docker-compose logs --tail=100

    - name: Create GitHub Release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v1
      with:
        name: Release ${{ env.DEPLOY_TAG }}
        body_path: CHANGELOG.md
        draft: false
        prerelease: false
        files: |
          LICENSE
          README.md
          CHANGELOG.md

    - name: Notify Slack
      if: always()
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
        text: "Deployment to ${{ env.DEPLOY_ENV }} ${{ job.status == 'success' && 'succeeded' || 'failed' }} :rocket:"
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} 