name: Frontend CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'frontend/trading-bot-ui/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'frontend/trading-bot-ui/**'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend/trading-bot-ui

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: frontend/trading-bot-ui/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Lint
      run: |
        npm run lint || true
        npm run prettier:check || true

    - name: Type check
      run: npm run type-check || true

    - name: Run unit tests
      run: npm run test:ci

    - name: Build
      run: npm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build
        path: frontend/trading-bot-ui/build/

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        directory: frontend/trading-bot-ui/coverage/
        flags: frontend
        name: frontend-coverage

  e2e-tests:
    needs: build-and-test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend/trading-bot-ui

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
        cache-dependency-path: frontend/trading-bot-ui/package-lock.json

    - name: Install dependencies
      run: |
        npm ci
        npx playwright install --with-deps

    - name: Run E2E tests
      run: npm run test:e2e

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: playwright-report
        path: frontend/trading-bot-ui/playwright-report/
        retention-days: 30

  docker:
    needs: [build-and-test, e2e-tests]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'

    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: frontend/trading-bot-ui
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/trading-bot-frontend:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/trading-bot-frontend:${{ github.sha }}
        cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/trading-bot-frontend:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/trading-bot-frontend:buildcache,mode=max 